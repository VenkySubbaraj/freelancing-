version: 2
updates:
  - package-ecosystem: "terraform"
    directory: "/airflow2"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/central-store"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/data-general"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/dms"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/ffdp2.0"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/glue-data-catalog-enc"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/mwaa"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/secret-manager"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
  - package-ecosystem: "terraform"
    directory: "/soil-grid-api"
    schedule:
      interval: "weekly"
    commit-message:
      prefix: "chore"
      
      
      
      
      
      
fail-on-severity: 'critical'
license-check: false



on: [push, pull_request]

jobs:

  validate_commits:
    uses: yaradigitallabs/pipeline-actions-templates/.github/workflows/git-commits-validation.yaml@v1.1.1
    with:
      runner: "[\"gh-runner-sandbox\"]"
      version: 17.6.7
      
      
      
name: 'dependency review'
on: [pull_request]

permissions:
  contents: read

jobs:
  dependency-review:
    runs-on: gh-runner-ops-ghas
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3
        with:
          config-file: './.github/dependency-review-config.yml' 
          
          



name: 'scan code with checkov'

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

  workflow_dispatch:

permissions: read-all

jobs:
  scan:
    permissions:
      contents: read
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: gh-runner-ops-ghas
    steps:
      - uses: actions/checkout@v3

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif
          
          





name: 'dependabot update for terraform'

on:
  push:
    branches: 
      - '**' 
    paths-ignore:
      - '.github/dependabot.yml'

permissions:
  contents: write

jobs:
  terraform:
    name: 'Shell Job'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Check within folder structure for .tf files
    - name: Update Dependabot 
      shell: bash
      run: |
        if [[ "$(find . -name '*.tf' -not -path '*.terraform*' -printf '%h\n' | sort -u | wc -l)" -lt "200" ]]; 
          then yq -i 'del(.updates.[])' .github/dependabot.yml && \
            for DIR in $(find . -name '*.tf' -not -path '*.terraform*' -printf '%h\n' | sort -u); 
              do dir=${DIR:1} yq -i '."updates"+=[{"package-ecosystem":"terraform" | . style="double","directory":env(dir) | . style="double","schedule":{"interval":"weekly" | . style="double"} | . style="double","commit-message":{"prefix":"chore" | . style="double"}}]' .github/dependabot.yml;
            done;
        fi
    
    # Add and commit generated dependabot.yml file
    - name: Commit generated dependabot.yml
      shell: bash
      run: |
        git config --global user.name 'GHAS Dependabot'
        git config --global user.email 'ghas-dependabot@users.noreply.github.com'
        git checkout ${{ github.ref_name }}
        git add .github/dependabot.yml
        git diff-index --quiet HEAD || git commit -am "ci: automated update of dependabot config"
        git push
        
        
        


module.exports = {
	extends: ['@commitlint/config-conventional'],
	ignores: [(message) => /^Bumps \[.+]\(.+\) from .+ to .+\.$/m.test(message)],
};


